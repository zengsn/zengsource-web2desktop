/*
 * File: app/view/home/device/EditWindow.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('DMSApp.view.home.device.EditWindow', {
    extend: 'Ext.window.Window',
    alias: 'widget.homedeviceeditwindow',

    requires: [
        'DMSApp.view.home.device.EditWindowViewModel',
        'Ext.form.Panel',
        'Ext.form.field.Hidden',
        'Ext.form.RadioGroup',
        'Ext.form.field.Radio',
        'Ext.form.field.ComboBox',
        'Ext.button.Button'
    ],

    viewModel: {
        type: 'homedeviceeditwindow'
    },
    width: 400,
    layout: 'fit',
    closeAction: 'hide',
    title: '编辑',
    modal: true,
    defaultListenerScope: true,

    items: [
        {
            xtype: 'form',
            itemId: 'editform',
            bodyPadding: 10,
            items: [
                {
                    xtype: 'hiddenfield',
                    anchor: '100%',
                    fieldLabel: 'Label',
                    name: 'id'
                },
                {
                    xtype: 'radiogroup',
                    itemId: 'datatypes',
                    fieldLabel: '数据类型',
                    items: [
                        {
                            xtype: 'radiofield',
                            name: 'type',
                            boxLabel: '设备',
                            checked: true,
                            inputValue: 'device'
                        },
                        {
                            xtype: 'radiofield',
                            name: 'type',
                            boxLabel: '存放区',
                            inputValue: 'location'
                        },
                        {
                            xtype: 'radiofield',
                            name: 'type',
                            boxLabel: '房间',
                            inputValue: 'room'
                        },
                        {
                            xtype: 'radiofield',
                            name: 'type',
                            boxLabel: '科室',
                            inputValue: 'division'
                        }
                    ],
                    listeners: {
                        change: 'onDataTypeChange'
                    }
                },
                {
                    xtype: 'textfield',
                    anchor: '100%',
                    fieldLabel: '设备ID',
                    name: 'code'
                },
                {
                    xtype: 'textfield',
                    anchor: '100%',
                    fieldLabel: '设备名',
                    name: 'name'
                },
                {
                    xtype: 'radiogroup',
                    itemId: 'devicecategory',
                    fieldLabel: '设备类型',
                    items: [
                        {
                            xtype: 'radiofield',
                            name: 'category',
                            boxLabel: '固定设备',
                            checked: true,
                            inputValue: 'fix'
                        },
                        {
                            xtype: 'radiofield',
                            name: 'category',
                            boxLabel: '特殊设备',
                            inputValue: 'special'
                        }
                    ],
                    listeners: {
                        change: 'onDevicecategoryChange'
                    }
                },
                {
                    xtype: 'fieldcontainer',
                    itemId: 'place',
                    fieldLabel: '存放地',
                    layout: {
                        type: 'hbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'combobox',
                            flex: 2,
                            name: 'locationId',
                            displayField: 'name',
                            store: 'Locations',
                            valueField: 'id'
                        },
                        {
                            xtype: 'combobox',
                            flex: 1,
                            margin: '0 0 0 10',
                            name: 'roomId',
                            displayField: 'name',
                            store: 'Rooms',
                            valueField: 'id'
                        }
                    ]
                },
                {
                    xtype: 'combobox',
                    anchor: '100%',
                    hidden: true,
                    fieldLabel: '科室',
                    name: 'divisionId',
                    displayField: 'name',
                    store: 'Divisions',
                    valueField: 'id',
                    listeners: {
                        change: 'onDivisionIdComboChange'
                    }
                },
                {
                    xtype: 'container',
                    itemId: 'buttons',
                    layout: {
                        type: 'hbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'container',
                            flex: 1
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                var fp = button.up('form');
                                var type = fp.down('#datatypes').getValue().type;
                                fp.getForm().submit({
                                    clientValidation: true,
                                    url: './resources/data/success.json',
                                    params: {},
                                    success: function(form, action) {
                                        Ext.Msg.alert('成功', action.result.msg);
                                    },
                                    failure: function(form, action) {
                                        switch (action.failureType) {
                                            case Ext.form.action.Action.CLIENT_INVALID:
                                            Ext.Msg.alert('失败', '请正确填写表单内容！');
                                            break;
                                            case Ext.form.action.Action.CONNECT_FAILURE:
                                            Ext.Msg.alert('失败', '通信错误！');
                                            break;
                                            case Ext.form.action.Action.SERVER_INVALID:
                                            Ext.Msg.alert('失败', action.result.msg);
                                        }
                                    }
                                });
                            },
                            width: 100,
                            text: '保存'
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                button.up('window').close();
                            },
                            margin: '0 0 0 10',
                            text: '取消'
                        }
                    ]
                }
            ]
        }
    ],
    listeners: {
        close: 'onWindowClose'
    },

    onDataTypeChange: function(field, newValue, oldValue, eOpts) {
        var me = this;
        var fp = me.down('form');
        var type = newValue.type;
        if ('device'==type) {
            fp.getForm().findField('name').show();
            fp.getForm().findField('code').show();
            var catGrp = fp.down('#devicecategory');
            catGrp.show();
            if ('fix'==catGrp.getValue().category) {
                fp.down('#place').show();
                //fp.getForm().findField('locationId').show();
                fp.getForm().findField('roomId').show();
                fp.getForm().findField('divisionId').hide();
            } else if ('special'==catGrp.getValue().category) {
                fp.down('#place').hide();
                fp.getForm().findField('divisionId').show();
            }
        } else if ('location'==type) {
            fp.getForm().findField('name').show();
            fp.getForm().findField('code').hide();
            fp.down('#devicecategory').hide();
            fp.down('#place').hide();
            fp.getForm().findField('divisionId').hide();
        } else if ('room'==type) {
            fp.getForm().findField('name').show();
            fp.getForm().findField('code').hide();
            fp.down('#devicecategory').hide();
            fp.down('#place').show();
            //fp.getForm().findField('locationId').show();
            fp.getForm().findField('roomId').hide();
            fp.getForm().findField('divisionId').hide();
        } else if ('division'==type) {
            fp.getForm().findField('name').show();
            fp.getForm().findField('code').hide();
            fp.down('#devicecategory').hide();
            fp.down('#place').hide();
        }
    },

    onDevicecategoryChange: function(field, newValue, oldValue, eOpts) {
        var me = this;
        var fp = me.down('form');
        var category = newValue.category;
        if ('fix' == category) {
            fp.down('#place').show();
            fp.getForm().findField('roomId').show();
            fp.getForm().findField('divisionId').hide();
        } else if ('special' == category) {
            fp.down('#place').hide();
            fp.getForm().findField('divisionId').show();
        }
    },

    onDivisionIdComboChange: function(field, newValue, oldValue, eOpts) {
        var me = this;
        if (newValue && field.getStore().getCount()===0) {
            field.getStore().load({
                callback: function(records, opt, success) {
                    if (success && records.length>0) {
                        field.select(newValue);
                    }
                }
            });
        }
    },

    onWindowClose: function(panel, eOpts) {
        var me = this;
        me.down('form').getForm().reset();
    },

    loadData: function(dataId) {
        var me = this;
        var fp = me.down('form');
        var type = 'device';
        if (dataId.indexOf('location-')>-1) {
            type = 'location';
        } else if (dataId.indexOf('room-')>-1) {
            type = 'room';
        } else if (dataId.indexOf('division-')>-1) {
            type = 'division';
        }
        fp.down('#datatypes').setValue({type:type});
        // 加载数据
        Ext.Ajax.request({
            url: './resources/data/device.json',
            // id格式：device-ID、location-ID、room-ID、division-ID
            params: { id: dataId },
            success: function(response){
                var text = response.responseText;
                var obj = Ext.decode(text);
                fp.getForm().loadRecord(Ext.create('Ext.data.Model', obj.device));
            }
        });
    }

});