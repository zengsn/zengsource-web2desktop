/*
 * File: app/view/home/maintainance/TabPanel.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('DMSApp.view.home.maintainance.TabPanel', {
    extend: 'Ext.tab.Panel',
    alias: 'widget.homemaintainancetabpanel',

    requires: [
        'DMSApp.view.home.maintainance.TabPanelViewModel',
        'Ext.grid.Panel',
        'Ext.grid.column.RowNumberer',
        'Ext.form.field.Text',
        'Ext.grid.column.Action',
        'Ext.grid.View',
        'Ext.toolbar.Paging',
        'Ext.toolbar.Separator',
        'Ext.form.field.Checkbox',
        'Ext.tab.Tab',
        'Ext.grid.plugin.RowEditing'
    ],

    viewModel: {
        type: 'homemaintainancetabpanel'
    },
    activeTab: 0,
    defaultListenerScope: true,

    items: [
        {
            xtype: 'gridpanel',
            itemId: 'repairgrid',
            title: '维护记录',
            store: 'Repairs',
            columns: [
                {
                    xtype: 'rownumberer'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'date',
                    text: '日期'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'deviceName',
                    text: '设备名称'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'locationName',
                    text: '位置'
                },
                {
                    xtype: 'gridcolumn',
                    width: 64,
                    dataIndex: 'roomId',
                    text: '房间'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'problem',
                    text: '故障现象',
                    flex: 1,
                    editor: {
                        xtype: 'textfield',
                        name: 'problems'
                    }
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'measure',
                    text: '检修情况',
                    flex: 1,
                    editor: {
                        xtype: 'textfield',
                        name: 'measure'
                    }
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if (value===-1) {
                            return '<span style="color:red;">修理中</span>';
                        } else {
                            return '<span style="color:gray;">已恢复</span>';
                        }
                    },
                    width: 64,
                    dataIndex: 'deviceStatus',
                    text: '状态'
                },
                {
                    xtype: 'actioncolumn',
                    align: 'center',
                    dataIndex: 'deviceStatus',
                    text: '操作',
                    items: [
                        {
                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                var grid = view;
                                var record = grid.getStore().getAt(rowIndex);
                                if (record.data.deviceStatus!=-1) {
                                    Ext.Msg.alert('错误', '该设备已恢复正常使用，不需要再操作！');
                                    return;
                                }
                                Ext.Msg.confirm('操作确认', '确定该设备已经修理到位了吗？', function(btnId, text, opt) {
                                    if ('yes'==btnId) {
                                        Ext.Ajax.request({
                                            url: './resources/data/success.json',
                                            params: { id: record.data.id },
                                            success: function(response){
                                                var text = response.responseText;
                                                var obj = Ext.decode(text);
                                                Ext.Msg.alert('操作成功', '设备状态已修改为正常！');
                                            }
                                        });
                                    }
                                });
                            },
                            icon: './resources/icons/left16.png',
                            tooltip: '修好恢复'
                        }
                    ]
                }
            ],
            listeners: {
                render: 'onRepairGridRender',
                selectionchange: 'onRepairGridSelectionChange',
                itemcontextmenu: 'onRepairGridItemContextMenu'
            },
            dockedItems: [
                {
                    xtype: 'pagingtoolbar',
                    dock: 'bottom',
                    width: 360,
                    displayInfo: true,
                    store: 'Repairs',
                    items: [
                        {
                            xtype: 'tbseparator'
                        },
                        {
                            xtype: 'button',
                            disabled: true,
                            hidden: true,
                            itemId: 'printBtn',
                            icon: './resources/icons/print16.png'
                        },
                        {
                            xtype: 'button',
                            disabled: true,
                            hidden: true,
                            itemId: 'renewDeviceBtn',
                            icon: './resources/icons/left16.png'
                        },
                        {
                            xtype: 'tbseparator'
                        },
                        {
                            xtype: 'checkboxfield',
                            itemId: 'repairingOnly',
                            boxLabel: '仅显示未修好',
                            inputValue: '-1',
                            listeners: {
                                change: 'onRepairingOnlyChange'
                            }
                        }
                    ]
                }
            ],
            plugins: [
                {
                    ptype: 'rowediting',
                    pluginId: 'repairRowEditor',
                    listeners: {
                        edit: 'onRepairRowEditingEdit',
                        canceledit: 'onRepairRowEditingCanceledit'
                    }
                }
            ]
        },
        {
            xtype: 'gridpanel',
            disabled: true,
            itemId: 'usagegrid',
            title: '使用记录',
            store: 'Usages',
            columns: [
                {
                    xtype: 'rownumberer'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'deviceCode',
                    text: '设备ID'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'deviceName',
                    text: '设备名'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'startDate',
                    text: '使用时间'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'endDate',
                    text: '归还时间'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'comment',
                    text: '备注',
                    flex: 1
                }
            ]
        }
    ],

    onRepairGridRender: function(component, eOpts) {
        var me = this;
        component.getStore().load();
    },

    onRepairGridSelectionChange: function(model, selected, eOpts) {
        var me = this;
        var grid = me.down('#repairgrid');
        // var bbar = grid.getDockedItems('toolbar[dock="bottom"]')[0];
        // var button = bbar.down('#renewDeviceBtn');
        // if (model.getCount()===1) {
        //     button.enable();
        // } else {
        //     button.disable();
        // }
    },

    onRepairGridItemContextMenu: function(dataview, record, item, index, e, eOpts) {
        var me = this;
        e.preventDefault();
        var grid = me.down('#repairgrid');
        if (!grid.itemContextMenu) {
            grid.itemContextMenu = Ext.create('widget.homemaintainancecontextmenu');
            grid.itemContextMenu.grid = grid;
        }
        grid.itemContextMenu.checkStatus(record);
        grid.itemContextMenu.showAt(e.getXY());
    },

    onRepairingOnlyChange: function(field, newValue, oldValue, eOpts) {
        var me = this;
        var grid = me.down('#repairgrid');
        if (newValue) {
            grid.getStore().load({status: -1});
        } else {
            grid.getStore().load();
        }
    },

    onRepairRowEditingEdit: function(editor, context, eOpts) {
        var grid = editor.grid;
        var record = context.record;
        var newValues = context.newValues;//console.dir(newValues);
        record.data.problem = newValues.problem;
        record.data.measure = newValues.measure;
        Ext.Ajax.request({
            url: './resources/data/success.json',
            params: record.data,
            success: function(response){
                var text = response.responseText;
                var obj = Ext.decode(text);
                grid.getStore().load();
            }
        });
    },

    onRepairRowEditingCanceledit: function(editor, context, eOpts) {
        var grid = editor.grid;
        grid.getStore().load();
    }

});